/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        password1: password1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(E) &kp X &kp I &kp L &kp E &kp N1 &kp N2 &kp N3>;
            label = "PASSWORD1";
        };

        password2: password2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(E) &kp X &kp I &kp L &kp E &kp N1 &kp N2 &kp N3 &kp N4>;
            label = "PASSWORD2";
        };

        PlayPauseYandex: PlayPauseYandex {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LCTRL &kt LEFT_SHIFT &kp SPACE &kt LEFT_CONTROL &kt LEFT_SHIFT>;
            label = "PLAYPAUSEYANDEX";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&trans     &trans  &trans    &trans    &trans            &trans                         &trans  &trans  &trans     &trans     &trans    &trans
&kp ESC    &kp Q   &kp W     &kp E     &kp R             &kp T                          &kp Y   &kp U   &kp I      &kp O      &kp P     &kp LBKT
&kp TAB    &kp A   &kp S     &kp D     &kp F             &kp G                          &kp H   &kp J   &kp K      &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C     &kp V             &kp B   &trans       &trans    &kp N   &kp M   &kp COMMA  &kp DOT    &kp FSLH  &kp RET
                   &kp LGUI  &kp LALT  &kp LEFT_CONTROL  &mo 1   &kp SPACE    &kp BSPC  &mo 2   &mo 3   &kp LEFT   &kp RIGHT
            >;
        };

        LeftLayer {
            bindings = <
&trans     &trans         &trans     &trans     &trans     &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &kp LC(RIGHT)  &kp HOME   &kp UP     &kp END    &kp PG_UP                     &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp LC(LEFT)   &kp LEFT   &kp DOWN   &kp RIGHT  &kp PG_DN                     &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp LC(Z)      &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)  &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
                          &trans     &kp INS    &kp DEL    &trans     &kp RET    &trans  &trans  &trans  &trans  &trans
            >;
        };

        RightLayer {
            bindings = <
&trans     &trans        &trans        &trans         &trans        &trans                           &trans         &trans        &trans        &trans        &trans        &trans
&kp GRAVE  &kp N1        &kp N2        &kp N3         &kp N4        &kp N5                           &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &kp MINUS
&kp TAB    &kp LS(EXCL)  &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)                    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(PIPE)
&kp LSHFT  &kp MINUS     &kp LS(PLUS)  &kp EQUAL      &kp LS(LBRC)  &kp LS(RBRC)   &trans    &trans  &kp LBKT       &kp RBKT      &kp COMMA     &kp DOT       &kp BSLH      &kp K_MENU
                         &trans        &trans         &trans        &trans         &trans    &trans  &trans         &trans        &trans        &trans
            >;
        };

        FunctionalLayer {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5        &kp F6                                       &kp F7      &kp F8        &kp F9        &kp F10       &kp F11     &kp F12
&trans  &trans  &trans  &trans  &trans        &trans                                       &trans      &trans        &trans        &trans        &trans      &trans
&trans  &trans  &trans  &trans  &trans        &trans                                       &trans      &trans        &trans        &trans        &password1  &password2
&trans  &trans  &trans  &trans  &kp C_VOL_DN  &kp C_VOLUME_UP  &trans              &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &kp LG(D)   &kp LG(L)
                &trans  &trans  &trans        &trans           &PlayPauseYandex    &trans  &trans      &trans        &trans        &trans
            >;
        };
    };
};
